AWSTemplateFormatVersion: "2010-09-09"
Description: FCPL account access
Parameters:
    FCPLAccountId:
        Type: String
        AllowedPattern: "^[0-9]+$"
    FCPLPassword:
        Type: String
        NoEcho: true
    S3Bucket:
        Type: String
    MaxCacheAgeHours:
        Type: Number
        Default: 10
    BackgroundRefreshIntervalHours:
        Type: Number
        Default: 12
Resources:
    GetBooksExecutionRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Principal:
                        Service:
                            - lambda.amazonaws.com
                      Action: "sts:AssumeRole"
            ManagedPolicyArns:
                - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            Policies:
                - PolicyName: S3BucketAccess
                  PolicyDocument:
                    Version: "2012-10-17"
                    Statement:
                        - Effect: Allow
                          Action:
                            - "s3:GetObject"
                            - "s3:PutObject"
                          Resource: !Sub "arn:aws:s3:::${S3Bucket}/cache/*"
                        - Effect: Allow
                          Action:
                            - "s3:ListBucket"
                          Resource: !Sub "arn:aws:s3:::${S3Bucket}"
    GetBooksFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Code:
                S3Bucket: !Ref S3Bucket
                S3Key: "functions/GetBooks/code.zip"
            Environment:
                Variables:
                    FCPLAccountId: !Ref FCPLAccountId
                    FCPLPassword: !Ref FCPLPassword
                    S3Bucket: !Ref S3Bucket
                    CachePrefix: "cache/TEST"
                    MaxCacheAgeHours: !Ref MaxCacheAgeHours
            Handler: index.handler
            Role: !GetAtt GetBooksExecutionRole.Arn
            Runtime: nodejs6.10
            Timeout: 60
    GetBooksBackgroundRefreshPermission:
        Type: "AWS::Lambda::Permission"
        Properties:
            Action: "lambda:InvokeFunction"
            FunctionName: !Ref GetBooksFunction
            Principal: "events.amazonaws.com"
            SourceArn: !GetAtt BackgroundRefreshRule.Arn
    BackgroundRefreshRule:
        Type: "AWS::Events::Rule"
        Properties:
            Description: !Sub "Refreshes the cache every ${BackgroundRefreshIntervalHours} hours"
            ScheduleExpression: !Sub "rate(${BackgroundRefreshIntervalHours} hours)"
            State: ENABLED
            Targets:
                - Arn: !GetAtt GetBooksFunction.Arn
                  Id: GetBooksFunctionScheduleTarget
Outputs:
    GetBooksFunctionName:
        Value: !Ref GetBooksFunction
        
